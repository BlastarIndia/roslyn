<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Microsoft Open Technologies, Inc.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ImportGroup Label="Settings">
    <Import Project="..\..\..\..\Tools\Microsoft.CodeAnalysis.Toolset.Open\Targets\VSL.Settings.targets" />
    <Import Project="..\..\..\..\packages\Microsoft.Net.ToolsetCompilers.0.7.4032713-beta\build\Microsoft.Net.ToolsetCompilers.props" Condition="Exists('..\..\..\..\packages\Microsoft.Net.ToolsetCompilers.0.7.4032713-beta\build\Microsoft.Net.ToolsetCompilers.props')" />
  </ImportGroup>
  <PropertyGroup>
    <NonShipping>true</NonShipping>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <Platform Condition="'$(Platform)' == ''">AnyCPU</Platform>
    <ProjectGuid>{50D26304-0961-4A51-ABF6-6CAD1A56D202}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>Microsoft.CodeAnalysis.CSharp.UnitTests</RootNamespace>
    <AssemblyName>Roslyn.Compilers.CSharp.Syntax.UnitTests</AssemblyName>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
    <StyleCopEnabled>false</StyleCopEnabled>
    <SolutionDir Condition="'$(SolutionDir)' == '' OR '$(SolutionDir)' == '*Undefined*'">..\..\..\..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <OutDir>..\..\..\..\..\Binaries\$(Configuration)\</OutDir>
    <CSharpSyntaxGeneratorToolPath>..\..\..\..\..\Binaries\$(Configuration)\CSharpSyntaxGenerator.exe</CSharpSyntaxGeneratorToolPath>
  </PropertyGroup>
  <ItemGroup Label="Build Items">
    <SyntaxTestDefinition Include="..\..\Source\Syntax\Syntax.xml" />
  </ItemGroup>
  <ItemGroup Label="Project References">
    <ProjectReference Include="..\..\..\..\Test\Utilities\TestUtilities.csproj">
      <Project>{76C6F005-C89D-4348-BB4A-391898DBEB52}</Project>
      <Name>TestUtilities</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\..\Core\Source\CodeAnalysis.csproj">
      <Project>{1EE8CAD3-55F9-4D91-96B2-084641DA9A6C}</Project>
      <Name>CodeAnalysis</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\..\Test\Resources\Core\CompilerTestResources.vbproj">
      <Project>{7FE6B002-89D8-4298-9B1B-0B5C247DD1FD}</Project>
      <Name>CompilerTestResources</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\..\Test\Utilities\Core2\CompilerTestUtilities2.csproj">
      <Project>{F7712928-1175-47B3-8819-EE086753DEE2}</Project>
      <Name>CompilerTestUtilities2</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\..\Test\Utilities\CSharp\CSharpCompilerTestUtilities.csproj">
      <Project>{4371944A-D3BA-4B5B-8285-82E5FFC6D1F9}</Project>
      <Name>CSharpCompilerTestUtilities</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\..\VisualBasic\Source\BasicCodeAnalysis.vbproj">
      <Project>{2523D0E6-DF32-4A3E-8AE0-A19BFFAE2EF6}</Project>
      <Name>BasicCodeAnalysis</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\Source\CSharpCodeAnalysis.csproj">
      <Project>{B501A547-C911-4A05-AC6E-274A50DFF30E}</Project>
      <Name>CSharpCodeAnalysis</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\Source\CSharpCodeAnalysis.csproj">
      <Project>{B501A547-C911-4A05-AC6E-274A50DFF30E}</Project>
      <Name>CSharpCodeAnalysis</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="..\..\..\..\Tools\Source\CompilerGeneratorTools\Source\CSharpSyntaxGenerator\CSharpSyntaxGenerator.csproj">
      <Project>{288089C5-8721-458E-BE3E-78990DAB5E2D}</Project>
      <Name>CSharpSyntaxGenerator</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup Label="File References">
    <Reference Include="xunit.abstractions">
      <HintPath>..\..\..\..\packages\xunit.abstractions.2.0.0-alpha-build2576\lib\net35\xunit.abstractions.dll</HintPath>
    </Reference>
    <Reference Include="xunit2.assert">
      <HintPath>..\..\..\..\packages\xunit.assert.2.0.0-alpha-build2576\lib\net45\xunit2.assert.dll</HintPath>
    </Reference>
    <Reference Include="xunit2">
      <HintPath>..\..\..\..\packages\xunit.core.2.0.0-alpha-build2576\lib\net45\xunit2.dll</HintPath>
    </Reference>
    <Reference Include="System.Collections.Immutable">
      <HintPath>..\..\..\..\packages\Microsoft.Bcl.Immutable.1.1.20-beta\lib\portable-net45+win8\System.Collections.Immutable.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.Test.Resources.Proprietary">
      <HintPath>..\..\..\..\packages\Microsoft.CodeAnalysis.Test.Resources.Proprietary.0.7.4032713-beta\lib\net45\Microsoft.CodeAnalysis.Test.Resources.Proprietary.dll</HintPath>
    </Reference>
  </ItemGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' "></PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' "></PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|ARM' ">
    <PlatformTarget>ARM</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|ARM' ">
    <PlatformTarget>ARM</PlatformTarget>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="$(IntermediateOutputPath)\Syntax.xml.Generated.cs">
      <Link>Syntax\Syntax.xml.Generated.cs</Link>
    </Compile>
    <Compile Include="Diagnostics\DiagnosticTest.cs" />
    <Compile Include="Diagnostics\DiagnosticTest.MockSyntaxTree.cs" />
    <Compile Include="Diagnostics\LocationsTests.cs" />
    <Compile Include="IncrementalParsing\BinaryExpression.cs" />
    <Compile Include="IncrementalParsing\ChangingAsync.cs" />
    <Compile Include="IncrementalParsing\ChangingIdentifiers.cs" />
    <Compile Include="IncrementalParsing\CompoundAssignment.cs" />
    <Compile Include="IncrementalParsing\GrammarAmbiguities.cs" />
    <Compile Include="IncrementalParsing\IncrementalParsingTests.cs" />
    <Compile Include="IncrementalParsing\NodeValidators.cs" />
    <Compile Include="IncrementalParsing\SyntaxDifferences.cs" />
    <Compile Include="IncrementalParsing\TypeChanges.cs" />
    <Compile Include="IncrementalParsing\UnaryExpression.cs" />
    <Compile Include="LexicalAndXml\CrefLexerTests.cs" />
    <Compile Include="LexicalAndXml\DisabledRegionTests.cs" />
    <Compile Include="LexicalAndXml\DocumentationCommentLexerTestBase.cs" />
    <Compile Include="LexicalAndXml\LexicalErrorTests.cs" />
    <Compile Include="LexicalAndXml\LexicalTests.cs" />
    <Compile Include="LexicalAndXml\NameAttributeValueLexerTests.cs" />
    <Compile Include="LexicalAndXml\PreprocessorTests.cs" />
    <Compile Include="LexicalAndXml\XmlDocCommentTests.cs" />
    <Compile Include="ParentChecker.cs" />
    <Compile Include="Parsing\AsyncParsingTests.cs" />
    <Compile Include="Parsing\AwaitParsingTests.cs" />
    <Compile Include="Parsing\CrefParsingTests.cs" />
    <Compile Include="Parsing\DeclarationParsingTests.cs" />
    <Compile Include="Parsing\ExpressionParsingTests.cs" />
    <Compile Include="Parsing\FuzzTesting.cs" />
    <Compile Include="Parsing\InteractiveParsingTests.cs" />
    <Compile Include="Parsing\LambdaParameterParsingTests.cs" />
    <Compile Include="Parsing\NameAttributeValueParsingTests.cs" />
    <Compile Include="Parsing\NameParsingTests.cs" />
    <Compile Include="Parsing\ParseOptionsTests.cs" />
    <Compile Include="Parsing\ParserErrorMessageTests.cs" />
    <Compile Include="Parsing\ParsingErrorRecoveryTests.cs" />
    <Compile Include="Parsing\ParsingTests.cs" />
    <Compile Include="Parsing\RoundTrippingTests.cs" />
    <Compile Include="Parsing\SeparatedSyntaxListParsingTests.cs" />
    <Compile Include="Parsing\StatementParsingTests.cs" />
    <Compile Include="Parsing\SyntaxExtensions.cs" />
    <Compile Include="Parsing\VerbatimCrefParsingTests.cs" />
    <Compile Include="Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Include="Syntax\ChildSyntaxListTests.cs" />
    <Compile Include="Syntax\GreenNodeTests.cs" />
    <Compile Include="Syntax\RedNodeTests.cs" />
    <Compile Include="Syntax\SeparatedSyntaxListTests.cs" />
    <Compile Include="Syntax\SerializationTests.cs" />
    <Compile Include="Syntax\StructuredTriviaTests.cs" />
    <Compile Include="Syntax\SyntaxAnnotationTests.cs" />
    <Compile Include="Syntax\SyntaxDiffingTests.cs" />
    <Compile Include="Syntax\SyntaxEquivalenceTests.cs" />
    <Compile Include="Syntax\SyntaxFactoryTests.cs" />
    <Compile Include="Syntax\SyntaxFormatterTests.cs" />
    <Compile Include="Syntax\SyntaxListTests.cs" />
    <Compile Include="Syntax\SyntaxNodeOrTokenListTests.cs" />
    <Compile Include="Syntax\SyntaxNodeTests.cs" />
    <Compile Include="Syntax\SyntaxRewriterTests.cs" />
    <Compile Include="Syntax\SyntaxTests.cs" />
    <Compile Include="Syntax\SyntaxTokenListTests.cs" />
    <Compile Include="Syntax\SyntaxTriviaListTests.cs" />
    <Compile Include="TextExtensions.cs" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Resources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.configuration" />
    <Reference Include="System.Data" />
    <Reference Include="System.Runtime" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <ImportGroup Label="Targets">
    <Import Project="..\..\..\..\Tools\Microsoft.CodeAnalysis.Toolset.Open\Targets\VSL.Imports.targets" />
    <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
    <Import Project="..\..\..\..\packages\StyleCop.MSBuild.4.7.48.2\build\StyleCop.MSBuild.Targets" Condition="Exists('..\..\..\..\packages\StyleCop.MSBuild.4.7.48.2\build\StyleCop.MSBuild.Targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
  </Target>
</Project>